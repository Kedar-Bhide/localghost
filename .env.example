# LocalGhost Environment Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# FRONTEND ENVIRONMENT VARIABLES (Next.js)
# =============================================================================

# API Configuration
NEXT_PUBLIC_API_URL=http://localhost:8000/api/v1
NEXT_PUBLIC_WS_URL=ws://localhost:8000/ws

# App Configuration
NEXT_PUBLIC_APP_NAME=LocalGhost
NEXT_PUBLIC_APP_URL=http://localhost:3000

# =============================================================================
# BACKEND ENVIRONMENT VARIABLES (FastAPI)
# =============================================================================

# Database Configuration
DATABASE_URL=postgresql+asyncpg://username:password@db.your-project.supabase.co:5432/postgres

# Authentication & Security
SECRET_KEY=your-super-secret-jwt-key-here-change-this-in-production
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_HOURS=24

# Supabase Configuration
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_KEY=your-supabase-anon-key
SUPABASE_SERVICE_KEY=your-supabase-service-role-key

# CORS Configuration
ALLOWED_ORIGINS=["http://localhost:3000", "https://your-frontend-domain.vercel.app"]

# Application Settings
APP_NAME=LocalGhost API
VERSION=1.0.0
DEBUG=true

# File Upload Configuration
MAX_FILE_SIZE_MB=10
ALLOWED_FILE_TYPES=["image/jpeg", "image/png", "image/webp"]

# =============================================================================
# DEPLOYMENT ENVIRONMENT VARIABLES
# =============================================================================

# Production Database (Supabase)
# DATABASE_URL=postgresql+asyncpg://postgres:[YOUR-PASSWORD]@db.[YOUR-PROJECT-REF].supabase.co:5432/postgres

# Production Frontend URL
# NEXT_PUBLIC_API_URL=https://your-backend.onrender.com/api/v1
# NEXT_PUBLIC_WS_URL=wss://your-backend.onrender.com/ws

# Production CORS
# ALLOWED_ORIGINS=["https://your-frontend.vercel.app"]

# Production Security
# DEBUG=false
# SECRET_KEY=your-production-secret-key-very-long-and-secure

# =============================================================================
# OPTIONAL ENVIRONMENT VARIABLES
# =============================================================================

# Logging Level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Rate Limiting
RATE_LIMIT_PER_MINUTE=60

# Email Configuration (Future)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your-email@gmail.com
# SMTP_PASSWORD=your-app-password

# Redis Configuration (Future - for caching)
# REDIS_URL=redis://localhost:6379

# Monitoring (Future)
# SENTRY_DSN=https://your-sentry-dsn

# =============================================================================
# DEVELOPMENT NOTES
# =============================================================================

# 1. Never commit the actual .env file to version control
# 2. Generate a strong SECRET_KEY: openssl rand -hex 32
# 3. Use different keys for development and production
# 4. Update ALLOWED_ORIGINS with your actual frontend domains
# 5. DATABASE_URL format: postgresql+asyncpg://user:password@host:port/dbname